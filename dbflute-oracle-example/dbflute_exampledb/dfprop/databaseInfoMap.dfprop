# /---------------------------------------------------------------------------
# databaseInfoMap: (Required)
#
# The database information for the tasks of DBFlute.
# You should specify before your first generating.
# 
# o driver   -- The class name of JDBC-Driver.
# o url      -- The URL for connecting database.
# o schema   -- The schema name.
# o user     -- The database user name.
# o password -- The database password.
# o propertiesMap -- The properties that depends on the database.
# o variousMap    -- The various settings about JDBC task.
#
# *The line that starts with '#' means comment-out.
#
map:{
    ; driver   = oracle.jdbc.OracleDriver
    ; url      = df:dfprop/local-url.txt|jdbc:oracle:thin:@localhost:1521:XE
    ; schema   = EXAMPLEDB
    ; user     = exampledb
    ; password = exampledb

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o propertiesMap: (NotRequired - Default 'map:{}')
    #  The properties that depends on the database.
    # 
    ; propertiesMap = map:{includeSynonyms=true}
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o variousMap: (NotRequired - Default 'map:{}')
    #  The various settings about JDBC task mainly.
    # 
    ; variousMap = map:{
        # o objectTypeTargetList: (NotRequired - Default 'list:{TABLE;VIEW}')
        #  If you want to include other object types in generating target,
        #  you should specify the list of included object types as adding.
        #  This is only for the main schema. Additional schemas are unconcerned.
        #    ex) Synonym of Oracle --> list:{TABLE ; VIEW ; SYNONYM}
        #
        ; objectTypeTargetList=list:{TABLE ; VIEW ; SYNONYM}

        # o tableExceptList: (NotRequired - Default 'list:{}')
        #  If you want to exclude some tables in generating target,
        #  you should specify the list of excepted table hints.
        #  This is only for the main schema. Additional schemas are unconcerned.
        #    ex) list:{PRODUCT_STATUS ; prefix:TMP_}
        #
        ; tableExceptList=list:{
            # For Local Synonym Test
            ; WHITE_EXCEPT ; WHITE_REF_EXCEPT
            ; SYNONYM_TARGET ; SYNONYM_REF_TARGET
        }

        # o tableTargetList: (NotRequired - Default 'list:{}')
        #  If you want to include some tables in generating target expressly,
        #  you should specify the list of target table hints.
        #  This is only for the main schema. Additional schemas are unconcerned.
        #    ex) list:{PURCHASE ; contain:MEMBER}
        #
        #; tableTargetList = list:{FOO_TABLE ; prefix:FOO_ ; suffix:_FOO ; contain:_FOO_}

        # o columnExceptMap: (NotRequired - Default 'map:{}')
        #  If you want to exclude some columns in generating target,
        #  you should specify the list of excepted column hints.
        #  This is only for the main schema. Additional schemas are unconcerned.
        #    ex) map:{HEAVY_MASTER = list:{APP_NOT_USED_ID; suffix:_IMAGE}}
        #
        #; columnExceptMap = map:{
        #    ; FOO_TABLE = list:{FOO_COLUMN ; prefix:FOO_ ; suffix:_FOO ; contain:_FOO_}
        #}

        # o additionalSchemaMap: (NotRequired - Default 'map:{}')
        #  If you want to include other schemas in generating target,
        #  you should specify the map of included schemas.
        #  Additional schemas have original settings apart from the main schema.
        #  The settings are objectTypeTargetList, tableExceptList,
        #  tableTargetList, and columnExceptMap.
        #  They have the same specification as ones of the main schema.
        #  Elements of this map are as below: 
        #    o objectTypeTargetList: (NotRequired - Default 'map:{TABLE;VIEW}')
        #    o tableExceptList: (NotRequired - Default 'list:{}')
        #    o tableTargetList: (NotRequired - Default 'list:{}')
        #    o columnExceptMap: (NotRequired - Default 'map:{}')
        #    o isSuppressCommonColumn: (NotRequired - Default false)
        #    o isSuppressProcedure: (NotRequired - Default false)
        #
        ; additionalSchemaMap = map:{
            ; NEXTEXAMPLEDB = map:{
                ; objectTypeTargetList=list:{TABLE ; VIEW ; SYNONYM}
                ; tableExceptList=list:{
                    # because its synonym exists
                    ; NEXT_SCHEMA_SECRET_AUTH
                    ; WHITE_SAME_NAME ; WHITE_SAME_NAME_REF ; WHITE_SAME_NAME_REF_REF
                }
                ; tableTargetList=list:{}
                ; columnExceptMap=map:{}
                ; isSuppressCommonColumn=false
                ; isSuppressProcedure=false
            }
        }

        # for the try of CountDownRace
        #; metaDataCountDownRaceRunnerCount = 5
    }
    # - - - - - - - - - -/
}
# ----------------/
